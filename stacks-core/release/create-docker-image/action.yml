## Github workflow to create and upload github releases
name: Docker Image
description: "Create Docker Image"
branding:
  icon: "archive"
  color: "gray-dark"

inputs:
  tag:
    description: "Version tag of release"
    required: true
  docker_tag:
    description: "Version tag for docker images"
    required: true
  DOCKERHUB_USERNAME:
    description: "Docker username for publishing images"
    required: true
  DOCKERHUB_PASSWORD:
    description: "Docker password for publishing images"
    required: true
  dist:
    description: "Linux Distribution to build for"
    required: true
  platforms:
    description: "Docker platforms to build for"
    required: false
    default: "linux/arm64, linux/arm/v7, linux/amd64, linux/amd64/v3"

runs:
  using: "composite"
  steps:
    ## Setup Docker for the builds
    - name: Docker setup
      id: docker_setup
      uses: stacks-network/actions/docker@main
      with:
        username: ${{ inputs.DOCKERHUB_USERNAME }}
        password: ${{ inputs.DOCKERHUB_PASSWORD }}

    ## if the repo owner is not `stacks-network`, default to a docker-org of the repo owner (i.e. github user id)
    ## this allows forks to run the docker push workflows without having to hardcode a dockerhub org (but it does require docker hub user to match github username)
    - name: Set Docker Org
      id: set_docker_org
      shell: bash
      run: |
        if [[ "${{ github.repository_owner }}" != "stacks-network" ]]; then
          echo "docker-org=${{ github.repository_owner }}" >> "$GITHUB_ENV"
        else
          echo "docker-org=blockstack" >> "$GITHUB_ENV"
        fi

    - name: Check Signer Release
      id: check_signer_release
      shell: bash
      run: |
        case "${{ inputs.tag }}" in
          signer-*)
            echo "is-signer-release=true" >> $GITHUB_ENV
            ;;
          *)
            echo "is-signer-release=false" >> $GITHUB_ENV
            ;;
        esac

    - name: Set Docker Tag RC Flag
      id: docker_tag_rc_flag
      shell: bash
      run: |
        if [[ "${{ inputs.docker_tag }}" =~ -rc[0-9]*$ ]]; then
          echo "docker_tag_rc=true" >> $GITHUB_ENV
        else
          echo "docker_tag_rc=false" >> $GITHUB_ENV
        fi

    ## Set docker metatdata
    ## - depending on the matrix.dist, different tags will be enabled
    ## ex. debian will have this tag: `type=ref,event=tag,enable=${{ matrix.dist == 'debian' }}`
    - name: Docker Metadata ( ${{matrix.dist}} )
      if: ${{ env.is-signer-release == 'true' }}
      id: docker_metadata_signer
      uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 #v5.6.1
      with:
        images: |
          ${{env.docker-org}}/stacks-signer
        tags: |
          type=raw,value=latest,enable=${{ inputs.docker_tag != '' && env.docker_tag_rc != 'true' && matrix.dist == 'debian' }}
          type=raw,value=${{ inputs.docker_tag }}-${{ matrix.dist }},enable=${{ inputs.docker_tag != '' && matrix.dist == 'debian'}}
          type=raw,value=${{ inputs.docker_tag }},enable=${{ inputs.docker_tag != '' && matrix.dist == 'debian' }}
          type=ref,event=tag,enable=${{ matrix.dist == 'debian' }}
          type=raw,value=latest-${{ matrix.dist }},enable=${{ inputs.docker_tag != '' && env.docker_tag_rc != 'true' && matrix.dist == 'alpine' }}
          type=raw,value=${{ inputs.docker_tag }}-${{ matrix.dist }},enable=${{ inputs.docker_tag != '' && matrix.dist == 'alpine' }}

    - name: Docker Metadata ( ${{matrix.dist}} )
      if: ${{ env.is-signer-release == 'false' }}
      id: docker_metadata_node
      uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 #v5.6.1
      with:
        ## tag images with current repo name `stacks-core` as well as legacy `stacks-blockchain`
        images: |
          ${{env.docker-org}}/${{ github.event.repository.name }}
        tags: |
          type=raw,value=latest,enable=${{ inputs.docker_tag != '' && env.docker_tag_rc != 'true' && matrix.dist == 'debian' }}
          type=raw,value=${{ inputs.docker_tag }}-${{ matrix.dist }},enable=${{ inputs.docker_tag != '' && matrix.dist == 'debian'}}
          type=raw,value=${{ inputs.docker_tag }},enable=${{ inputs.docker_tag != '' && matrix.dist == 'debian' }}
          type=ref,event=tag,enable=${{ matrix.dist == 'debian' }}
          type=raw,value=latest-${{ matrix.dist }},enable=${{ inputs.docker_tag != '' && env.docker_tag_rc != 'true' && matrix.dist == 'alpine' }}
          type=raw,value=${{ inputs.docker_tag }}-${{ matrix.dist }},enable=${{ inputs.docker_tag != '' && matrix.dist == 'alpine' }}

    ## Build docker image for signer release
    - name: Build and Push ( ${{matrix.dist}} )
      if: ${{ env.is-signer-release == 'true' }}
      id: docker_build_signer
      uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # v6.13.0
      with:
        file: ./.github/actions/dockerfiles/Dockerfile.${{ matrix.dist }}-binary
        platforms: ${{ inputs.platforms }}
        tags: ${{ steps.docker_metadata_signer.outputs.tags }}
        labels: ${{ steps.docker_metadata_signer.outputs.labels }}
        build-args: |
          TAG=${{ inputs.tag }}
          REPO=${{ github.repository_owner }}/${{ github.event.repository.name }}
          STACKS_NODE_VERSION=${{ inputs.tag || env.GITHUB_SHA_SHORT }}
          GIT_BRANCH=${{ env.GITHUB_REF_SHORT }}
          GIT_COMMIT=${{ env.GITHUB_SHA_SHORT }}
        push: ${{ env.DOCKER_PUSH }}

    ## Build docker image for node release
    - name: Build and Push ( ${{matrix.dist}} )
      if: ${{ env.is-signer-release == 'false' }}
      id: docker_build_node
      uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # v6.13.0
      with:
        file: ./.github/actions/dockerfiles/Dockerfile.${{ matrix.dist }}-binary
        platforms: ${{ inputs.platforms }}
        tags: ${{ steps.docker_metadata_node.outputs.tags }}
        labels: ${{ steps.docker_metadata_node.outputs.labels }}
        build-args: |
          TAG=${{ inputs.tag }}
          REPO=${{ github.repository_owner }}/${{ github.event.repository.name }}
          STACKS_NODE_VERSION=${{ inputs.tag || env.GITHUB_SHA_SHORT }}
          GIT_BRANCH=${{ env.GITHUB_REF_SHORT }}
          GIT_COMMIT=${{ env.GITHUB_SHA_SHORT }}
        push: ${{ env.DOCKER_PUSH }}
